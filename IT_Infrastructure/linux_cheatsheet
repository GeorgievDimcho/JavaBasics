rechte:
Veriante 1:
	chmod (a,u,g,o) +/-/= (r,w,x) filename
	= overwrites the existing permissions
Variante 2:
	chmod (0-7)(0-7)(0-7) filename
	(owner)-(group)-(others)
Beispiel: chmod a+r
---
chown username  filename
chgrp groupname filename
-----
vi filename 
(if filename exists -> content shown; create new file with filename)
Modes:
	insert -> i
	replace -> r/R
	command/normal -> default/ESC
	colon -> :
	visual -> v
y -> yank (copy)
p -> paste
u -> undo
:write filename
:quit
:set nu
:q!-> force quit
--
head/tail -n number
--
cat  filename
less filename
more filename
--
find <directory> <option> filename 
Beispiel:
find / -name "zsh_command_not_found" 2>/dev/null
<options>:
size
type
ownership
-name
-iname caseinsensitive
. -- curent folder
/ -- everywhere
0 - std in
1 - std out
2 - std error
---
grep
grep <string> <options> <directory>
grep "hfsgdhd55e" -r ~/ 
cat long_file.txt | grep <string>
--
regex

--
cronjob
list scheduled autostart jobs
-e
--
adduser <new_username> 
create also a home directory
lowecase!
--
deluser <username>
--
add default gateway
entweder ip ro ...
oder route add default gw 192.168.1.1
--
subnetmaske
ifconfig eth0 netmask 255.255.255.224
--
arp table
arp -s 192.168.1.7 22:b4:23:ba:fa:2f
--
show routing table
ip route show
--
ps -aux
ps - report a snapshot of the current processes.
--
uname -a
-s, --kernel-name        print the kernel name
-a, --all                print all information, in the following order,
--
who -r
Print information about users who are currently logged in.
-r, --runlevel    print current runlevel
--
commands chainen
command1 && command2 if command1 executes without error then execute command2
--
command1 || command2
execute command2 only if command1 has non-zero return value
--
command1 | command2  (pipe) the output of command1 becomes input for command2
--
tcpdump (commandline tool similar to wireshark)
sudo tcpdump -i wlp3s0 port 443 -w tcpTest
go to wireshark -> file -> open -> tcpTest
--
nmap - port scanner (open, filtered, closed) je nachdem was in der iptables steht
--
systemctl - steuerung und überwachung von services und deamons
--
journalctl - logs anzeigen
--
jobs
fg
bg
--
tee - schreibt der Output von vorheriges Befehl in einer Datei UND leitet gleichzeitig weiter zum nächsten Befehl
cat abc.txt | tee new2.txt | more
--
ersetzen von tee
cat abc.txt > new3.txt && more new3.txt
--
echo "text" >> filename | cat filename
>> append at the end of file
> überschreiben

--
hostname
print the hostname
/etc/hosts
--
Tracert/Traceroute
traceroute google.com
(ping google.com -t (1,2,3,++))
--
Ipconfig/Ifconfig bzw. ip
--
Ping
Arp Ping
TCP Ping
--
Nslookup/Dig
list dns records for domain
--
The 'priority' numbers before the domains for these MX records indicate preference; the lower 'priority' value is preferred.
--
nslookup -q=MX orf.at 8.8.8.8
MX (Mail Exchanger) 
8.8.8.8 ip von DNS
----
dig milka.at MX
-x reverse DNS Query | known: ip | gesucht: domain name
--
ähnlich wie nslookup/dig
host orf.at
--
netstat - status von ports (TCP/UDP) 
listening, connected
netstat (ohne arguments) - shows connections
netstat -at - all tcp
-au - all udp
-lt - TCP mit status LISTEN
--
open vs closed port (aus dem Blick von Firewall)
all ports not filtered/rejected from FW -> OPEN
--
sudo iptables -S
ACCEPT ->
reject -> sendet nachricht zurück an der Absender
drop   -> sendet nichts zurück
--
important files
/etc/hosts - hostname to ip addr mapping
/etc/passwd - where the user information is saved  
bevor 1000 system user
100(0) - die (0) entspricht root  
ab 1000 normal user
/etc/shadow- where the hashes of the passwords are saved  
--
sudo ifconfig enp2s0f1 down/up
sudo ip link set dev enp2s0f1 down/up
default gateway -> ip route | grep default
change mac -> sudo ip link set dev enp2s0f1 address 00:11:22:33:44:55
ip-Befehl die IPv6-Adressen  -> ist bei "ip addr" dabei
--
show all active TCP Connection
 netstat -at
UDP
 netstat -au
